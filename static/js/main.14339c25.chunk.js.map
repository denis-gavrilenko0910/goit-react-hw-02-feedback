{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Container/Container.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/FeedbackOptions/FeedbackOptions.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","section__title","Statistics","optionsAllStateData","total","positivPercent","statistics__list","map","item","value","statistics__items","item__value","total__container","results_menu","item__total","item__positivPercnet","Notification","message","notification__container","notification","FeedbackOptions","options","onLeaveFeedback","countTotalFeedback","button__list","button__items","button","type","onClick","App","state","good","neutral","bad","handleIncrement","setState","prevState","Object","values","reduce","currentValue","positivePercentage","Math","round","optionsKeys","keys","this","entries","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14339c25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics__list\":\"Statistics_statistics__list__300As\",\"statistics__items\":\"Statistics_statistics__items__Xm7CP\",\"item\":\"Statistics_item__1GKCS\",\"item__value\":\"Statistics_item__value__2KS2J\",\"item__total\":\"Statistics_item__total__2tp1B\",\"total__container\":\"Statistics_total__container__2u3Y7\",\"results_menu\":\"Statistics_results_menu__3xRBp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button__list\":\"FeedbackOptions_button__list__YPcZg\",\"button__items\":\"FeedbackOptions_button__items__2Wa9o\",\"button\":\"FeedbackOptions_button__fFTYm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification__container\":\"Notification_notification__container__EwVea\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3bbRy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section__title\":\"Section_section__title__2kHzo\",\"move-background\":\"Section_move-background__18A8k\"};","import s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","import s from './Section.module.css';\r\n\r\nexport default function Section({ children, title }) {\r\n  return (\r\n    <section>\r\n      <h2 className={s.section__title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n","import { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nexport default function Statistics({\r\n  optionsAllStateData,\r\n  total,\r\n  positivPercent,\r\n}) {\r\n  return (\r\n    <Fragment>\r\n      <ul className={s.statistics__list}>\r\n        {optionsAllStateData.map(([item, value]) => (\r\n          <li key={item} className={s.statistics__items}>\r\n            <span className={s.item}>{item}</span>\r\n            <span className={s.item__value}>{value}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div className={s.total__container}>\r\n        <ul className={s.results_menu}>\r\n          <li>\r\n            <span className={s.item__total}>Total:</span>\r\n            <span className={s.item__total}>{total}</span>\r\n          </li>\r\n          <li>\r\n            <span className={s.item__positivPercnet}>Positiv Percentage:</span>\r\n            <span className={s.item__positivPercnet}>{positivPercent}%</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\nStatistics.propTypes = {\r\n  optionsAllStateData: PropTypes.array,\r\n};\r\n","import s from './Notification.module.css';\r\n\r\nexport default function Notification({ message }) {\r\n  return (\r\n    <div className={s.notification__container}>\r\n      <h2 className={s.notification}>{message}</h2>\r\n    </div>\r\n  );\r\n}\r\n","import { Fragment } from 'react';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({\r\n  options,\r\n  onLeaveFeedback,\r\n  countTotalFeedback,\r\n}) {\r\n  return (\r\n    <Fragment>\r\n      <ul className={s.button__list}>\r\n        {options.map(item => (\r\n          <li key={item} className={s.button__items}>\r\n            <button\r\n              className={s.button}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                onLeaveFeedback(item);\r\n                countTotalFeedback();\r\n              }}\r\n            >\r\n              {item}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from 'react';\nimport Container from './components/Container';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\nimport FeedbackOptions from './components/FeedbackOptions';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  handleIncrement = item => {\n    this.setState(prevState => {\n      return {\n        [item]: prevState[item] + 1,\n      };\n    });\n  };\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce(\n      (prevState, currentValue) => prevState + currentValue,\n      0,\n    );\n  };\n  positivePercentage = () => {\n    let positivPercent = Math.round(\n      (this.state.good / this.countTotalFeedback()) * 100,\n    );\n    return positivPercent;\n  };\n  render() {\n    const optionsKeys = Object.keys(this.state);\n    const optionsAllStateData = Object.entries(this.state);\n    const total = this.countTotalFeedback();\n    const positivPercent = this.positivePercentage();\n    return (\n      <Container>\n        <Section title=\"Leave your feedback, please!\">\n          <FeedbackOptions\n            options={optionsKeys}\n            onLeaveFeedback={this.handleIncrement}\n            countTotalFeedback={this.countTotalFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total && (\n            <Statistics\n              optionsAllStateData={optionsAllStateData}\n              total={total}\n              positivPercent={positivPercent}\n            />\n          )}\n          {!total && <Notification message=\"There are no feedbacks\" />}\n        </Section>\n      </Container>\n    );\n  }\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}